<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--
    抽象 bean: bean 的 abstract 属性为 true 的 bean, 这样的 bean 不能被 IOC 容器实例化，只用来被继承配置
        若某一个 bean 的class 属性没有指定，则该 bean 必须是一个抽象 bean
    -->
    <bean id="address" abstract="true">
        <property name="city" value="Beijing"></property>
        <property name="street" value="WuDaokou"></property>
    </bean>

    <!-- bean 配置的继承：使用 bean 的 parent 属性指定继承哪个 bean 的配置 -->
    <bean id="address2" class="com.onevgo.spring.beans.relation.Address" parent="address"></bean>

    <bean id="address3" parent="address2" p:street="DaZhongsi"></bean>

    <bean id="car" class="com.onevgo.spring.beans.relation.Car">
        <property name="brand" value="Audi"></property>
        <property name="price" value="300000"></property>
    </bean>

    <!-- 要求在配置 Person 时，必须有一个关联的 car! 换句话说 person 这个 bean 依赖于 Car 这个 bean -->
    <bean id="person" class="com.onevgo.spring.beans.relation.Person" depends-on="car">
        <property name="name" value="Tom"></property>
        <property name="address" ref="address2"></property>
    </bean>
</beans>