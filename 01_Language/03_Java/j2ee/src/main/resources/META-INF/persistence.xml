<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">

    <persistence-unit name="jpa-1" transaction-type="RESOURCE_LOCAL">
        <!--
        配置使用什么 ORM 产品来作为 JPA处理
            1. 实际上配置的是 javax.persistence.spi.PersistenceProvider 接口的实现类
            2. 若 JPA 项目中只有一个 JPA 的实现产品，则也可以不配置该节点
        -->
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

        <!-- 添加持久化类 -->
        <class>com.onevgo.jpa.helloworld.Customer</class>
        <class>com.onevgo.jpa.helloworld.Order</class>
        <class>com.onevgo.jpa.helloworld.Department</class>
        <class>com.onevgo.jpa.helloworld.Manager</class>
        <class>com.onevgo.jpa.helloworld.Category</class>
        <class>com.onevgo.jpa.helloworld.Item</class>

        <!--
        配置二级缓存的策略
            1. ALL：所有的实体类都被缓存
            2. NONE：所有的实体类都不被缓存.
            3. ENABLE_SELECTIVE：标识 @Cacheable(true) 注解的实体类将被缓存
            4. DISABLE_SELECTIVE：缓存除标识 @Cacheable(false) 以外的所有实体类
            5. UNSPECIFIED：默认值，JPA 产品默认值将被使用
        -->
        <shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

        <properties>
            <!-- 连接数据库的基本信息 -->
            <property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/default"/>
            <property name="javax.persistence.jdbc.user" value="root"/>
            <property name="javax.persistence.jdbc.password" value="root"/>

            <!-- 配置 JPA 实现产品的基本属性，配置 Hibernate 的基本属性 -->
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQL57InnoDBDialect"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.hbm2ddl.auto" value="update"/>

            <!-- 二级缓存相关 -->
            <!--
            <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.EhCacheRegionFactory"></property>
            <property name="hibernate.cache.use_query_cache" value="true"></property>
            <property name="hibernate.cache.use_second_level_cache" value="true"></property>
            -->
        </properties>
    </persistence-unit>
</persistence>
